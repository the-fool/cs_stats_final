# Question 2
V <- dbinom(0:17,17,.45)
library('ggplot2')
library('scatterplot3d')
library('rgl')
setwd('~/Downloads')
RedWine <- read.csv('winequality-red.csv')
RedWine$quality <- as.factor(RedWine$quality)
# 5
dist.matrix <- as.matrix(dist(RedWine[,1:3]))
dist.matrix <- as.matrix(dist(RedWine[1:3,1:3]))
heatmap(dist.matrix)
str(RedWine)
qplot(density, alcohol, data=RedWine, facets = .~quality)
qplot(density, alcohol, data=RedWine, color=factor(quality))
#8
qplot(density, alcohol, data=RedWine, facets = .~quality)
qplot(density, alcohol, data=RedWine, facets = quality ~.)
#10
qplot(density, alcohol, data=RedWine, color=factor(quality))
qplot(density, alcohol, data=RedWine, facets = .~quality)
qplot(density, alcohol, data=RedWine, facets = quality ~.)
qplot(density, alcohol, data=RedWine, facets = .~quality)
qplot(density, alcohol, data=RedWine, color=factor(quality))
qplot(density, alcohol, data=RedWine, shape=factor(quality), color=factor(quality))
install.packages('GGally')
install.packages('scales')
install.packages('memisc')
install.packages('lattice')
install.packages('MASS')
install.packages('car')
install.packages('reshape')
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
# sample 10,000 diamonds from the data set
set.seed(20022012)
diamond_samp <- diamonds[sample(1:length(diamonds$price), 10000), ]
ggpairs(diamond_samp, params = c(shape = I('.'), outlier.shape = I('.')))
library('ggplot2')
data(diamonds)
qplot(data = diamonds, x = carat, y = price,
xlim = c(0, quantile(diamonds$carat, 0.99)),
ylim = c(0, quantile(diamonds$price, 0.99)))
qplot(data = diamonds, x = carat, y = price,
xlim = c(0, quantile(diamonds$carat, 0.99)),
ylim = c(0, quantile(diamonds$price, 0.99))) +
geom_point(fill = I('#f79420'), color = I('black'), shape = 21)
install.packages('plyr')
diamond_samp <- diamonds[sample(1:length(diamonds$price), 100), ]
ggpairs(diamond_samp, lower = list(continuous = wrap("points", shape = I('.'))), upper= list(combo = wrap('box', outlier.shape = I('.'))))
plot2 = qplot(data = diamonds, x = price, binwidth = 0.01) + ggtitle('price log 10') + scale_x_log10()
plot1 = qplot(data = diamonds, x = price, binwidth = 100) + ggtitle('price')
library(gridExtra)
library(grid)
grid.arrange(plot1, plot2, ncol = 2)
installed.packages('gridExtra')
install.packages('gridExtra')
library(gridExtra)
library(grid)
grid.arrange(plot1, plot2, ncol = 2)
plot1 = qplot(data = diamonds, x = price, binwidth = 100) + ggtitle('price')
plot2 = qplot(data = diamonds, x = price, binwidth = 0.1) + ggtitle('price log 10') + scale_x_log10()
library(gridExtra)
library(grid)
grid.arrange(plot1, plot2, ncol = 2)
plot1 = qplot(data = diamonds, x = price, binwidth = 100) + ggtitle('price')
plot2 = qplot(data = diamonds, x = price, binwidth = 0.01) + ggtitle('price log 10') + scale_x_log10()
library(gridExtra)
library(grid)
grid.arrange(plot1, plot2, ncol = 2)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds) +
scale_y_continuous(trans = log10_trans())
cuberoot_trans = function() trans_new('cuberoot', transform = function(x) x^(1/3),
inverse = function(x) x^3)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3)
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3)
) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3)
) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
```
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
View(diamond_samp)
View(diamond_samp)
x = 5
setwd('~/workspace/cs280_stats/final_proj')
election <- read.csv('results.csv')
str(election)
with(data=election, cor(clinton, trump))
with(data=election, cor(CLINTON, TRUMP))
cor(election[3], election[7] )
cor(election[3:4], election[7:11] )
e.trimmed <- election[-c(5,6,9,11:)]
e.trimmed <- election[-c(5,6,9,11:15)]
str(e.trimmed)
cor(e.trimmed[3:4], e.trimmed[5:7])
d <- read.csv('results.csv')
## Remove candidates who have dropped out
results.all <- d[-c(5,6,9,11:15)]
results.dem <- results.all[1:4]
results.rep <- results.all[c(1:2, 5:7)]
correlations <- cor(results.dem, results.rep)
correlations <- cor(results.dem[-c(1:2)], results.rep[-c(1:2)])
str(correlations)
correlations
library(reshape2)
ggplot(correlations, aes(correlations[1:2,], correlations[,1:3]))
d <- melt(correlations)
d
ggplot(d, aes(var1, value))
ggplot(d, aes(Var1, value))
ggplot(d, aes(Var1, value)) + geom_bar(stat="identity")
d
ggplot2.barplot()
ggplot(data=d, aes(x=Var1, y=Value, fill=factor(Var2))) + geom_bar(stat="identity")
ggplot(data=d, aes(x=Var1, y=value, fill=factor(Var2))) + geom_bar(stat="identity")
ggplot(data=d, aes(x=Var1, y=value, fill=factor(Var2))) + geom_bar(stat="identity", position="dodge")
library(dplyr)
rename(correlations.long, c("Var1"="Dem", "Var2"="Rep", "value"="Correlation"))
results.dem <- results.all[1:4]
results.rep <- results.all[c(1:2, 5:7)]
## get correlations by county
correlations.matrix <- cor(results.dem[-c(1:2)], results.rep[-c(1:2)])
## Display the matrix
str(correlations.matrix)
## melt the matrix into long format
library(reshape2)
correlations.long = melt(correlations.matrix)
## rename columns on new data-frame
library(dplyr)
rename(correlations.long, c("Var1"="Dem", "Var2"="Rep", "value"="Correlation"))
names(correlations.long)
rename(correlations.long, c("Var1"="Dem", "Var2"="Rep", "value"="Correlation"))
rename(correlations.long, Dem = Var1, Rep = Var2, Correlation = value))
rename(correlations.long, Dem = Var1, Rep = Var2, Correlation = value)
ggplot(data = correlations.long, aes(x=Dem, y=Correlation, fill=factor(Rep))) +
geom_bar(stat="identity", position="dodge")
rename(correlations.long, Dem = Var1, Rep = Var2, Correlation = value)
ggplot(data = correlations.long, aes(x=Dem, y=Correlation, fill=factor(Rep))) +
geom_bar(stat="identity", position="dodge")
View(correlations.long)
correlations.long <- rename(correlations.long, Dem = Var1, Rep = Var2, Correlation = value)
## Plot grouped by Dem
ggplot(data = correlations.long, aes(x=Dem, y=Correlation, fill=factor(Rep))) +
geom_bar(stat="identity", position="dodge")
ggplot(data = correlations.long, aes(x=Rep, y=Correlation, fill=factor(Dem))) +
geom_bar(stat="identity", position="dodge")
ggplot(data = correlations.long, aes(x=Rep, y=Correlation, fill=factor(Dem))) +
geom_bar(stat="identity", position="dodge")
ggplot(data = results.all, aes('clinton', 'trump')) + geom_point()
head(results.all)
ggplot(data = results.all, aes('CLINTON', 'TRUMP')) + geom_point()
ggplot(data = results.all, aes(CLINTON, TRUMP)) + geom_point()
ggplot(data = results.all, aes(CLINTON, KASICH)) + geom_point()
library(GGally)
ggpairs(results.all(-c(1:2)))
ggpairs(results.all[-c(1:2)])
ggplot(data = results.all, aes(CLINTON, TRUMP)) + geom_point()
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_log10() + geom_point()
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point()
ggplot(data = results.all, aes(CLINTON, TRUMP)) + geom_point()
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point()
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(colour=SANDERS)
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=SANDERS))
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=KASICH))
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=CRUZ))
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=KASICH))
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=KASICH, alpha=1/4))
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=KASICH, alpha=1/2))
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=KASICH, alpha=0.7))
ggplot(data = results.all, aes(CLINTON, TRUMP)) + geom_point(aes(colour=KASICH, alpha=0.7))
ggplot(data = results.all, aes(CLINTON, TRUMP)) + geom_point(alpha=0.8)
ggplot(data = results.all, aes(CLINTON, TRUMP)) + geom_point(aes(alpha=0.6))
ggplot(data = results.all, aes(CLINTON, TRUMP)) + geom_point(aes(alpha=0.6, colour=blue))
ggplot(data = results.all, aes(CLINTON, TRUMP)) + geom_point(aes(alpha=0.6, colour='blue'))
ggplot(data = results.all, aes(CLINTON, TRUMP)) + geom_point(aes(alpha=0.6))
ggplot(data = results.all, aes(CLINTON, TRUMP)) + geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUPM)) + scale_y_sqrt() + geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_log2() + geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_log10() + geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=CRUZ))
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=KASICH))
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(colour = "red", aes(colour=KASICH))
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=KASICH))
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=KASICH)) + scale_colour_gradient(low="blue")
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=KASICH)) + scale_colour_gradient(low="blue", high="white")
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=KASICH)) + scale_colour_gradient(low="blue", high="red")
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=KASICH)) + scale_colour_gradient(low="black", high="red")
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=KASICH)) + scale_colour_gradient(low="green", high="red")
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=KASICH)) + scale_colour_gradient(low="blue", high="red")
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=CRUZ)) + scale_colour_gradient(low="blue", high="red")
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=KASICH)) + scale_colour_gradient(low="blue", high="red")
ggplot(data = results.all, aes(CLINTON, TRUMP)) + geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_log2t() + geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_log2() + geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_continous(trans="log2") + geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_continuous(trans="log2") + geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_continuous(trans="exp") + geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) + geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_continuous(trans="exp") + geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) + geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_continuous(trans="exp") + geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_continuous(trans="log2") + geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_continuous(trans="sqrt") + geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=CRUZ)) + scale_colour_gradient(low="blue", high="red")
ggplot(data = results.all, aes(CLINTON, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=KASICH)) + scale_colour_gradient(low="blue", high="red")
ggplot(data = results.all, aes(SANDEERS, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=KASICH)) + scale_colour_gradient(low="blue", high="red")
ggplot(data = results.all, aes(SANDERS, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=KASICH)) + scale_colour_gradient(low="blue", high="red")
ggplot(data = results.all, aes(SANDERS, KASICH)) + scale_y_sqrt() + geom_point(aes(colour=KASICH)) + scale_colour_gradient(low="blue", high="red")
ggplot(data = results.all, aes(SANDERS, KASICH)) + geom_point(aes(colour=KASICH)) + scale_colour_gradient(low="blue", high="red")
ggplot(data = results.all, aes(SANDERS, KASICH)) + scale_y_sqrt() + geom_point(aes(colour=KASICH)) + scale_colour_gradient(low="blue", high="red")
ggplot(data = results.all, aes(SANDERS, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=KASICH)) + scale_colour_gradient(low="blue", high="red")
ggplot(data = results.all, aes(SANDERS, KASICH)) + scale_y_sqrt()
ggplot(data = results.all, aes(SANDERS, KASICH)) + scale_y_sqrt() + geom_point(alpha=0.9)
ggplot(data = results.all, aes(SANDERS, KASICH)) +
scale_y_sqrt() +
geom_point(alpha=0.9) +
geom_smooth()
ggplot(data = results.all, aes(SANDERS, TRUMP)) + scale_y_sqrt() + geom_point(aes(colour=KASICH)) + scale_colour_gradient(low="blue", high="red")
ggplot(data = results.all, aes(SANDERS, TRUMP)) +
scale_y_sqrt() +
geom_point(aes(colour=KASICH)) +
scale_colour_gradient(low="blue", high="red")
ggplot(data = results.all, aes(SANDERS, KASICH)) +
scale_y_sqrt() +
geom_point(alpha=0.9) +
geom_smooth()
ggplot(data = results.all, aes(CLINTON, TRUMP)) +
scale_y_sqrt() +
geom_point(aes(colour=KASICH)) +
scale_colour_gradient(low="blue", high="red")
ggplot(data = results.all, aes(CLINTON, TRUMP)) +
scale_y_sqrt() +
geom_point(aes(colour=CRUZ)) +
scale_colour_gradient(low="blue", high="red")
ggplot(data = results.all, aes(CLINTON, TRUMP)) +
scale_y_continuous(trans="sqrt") +
geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) +
scale_y_sqrt() +
geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) +
geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) +
scale_y_sqrt() +
geom_point(alpha=0.6)
results.dem <- results.all[1:4]
results.rep <- results.all[c(1:2, 5:7)]
## get correlations by county
correlations.matrix <- cor(results.dem[-c(1:2)], results.rep[-c(1:2)])
## Display the matrix
str(correlations.matrix)
## melt the matrix into long format
library(reshape2)
correlations.long = melt(correlations.matrix)
## rename columns on new data-frame
library(dplyr)
correlations.long <- rename(correlations.long, Dem = Var1, Rep = Var2, Correlation = value)
## Plot grouped by Democrat
ggplot(data = correlations.long, aes(x=Dem, y=Correlation, fill=factor(Rep))) +
geom_bar(stat="identity", position="dodge")
ggplot(data = correlations.long, aes(x=Dem, y=Correlation, fill=factor(Rep))) +
geom_bar(width=.5, stat="identity", position="dodge")
ggplot(data = correlations.long, aes(x=Dem, y=Correlation, fill=factor(Rep))) +
geom_bar(width=.75, stat="identity", position="dodge")
ggplot(data = correlations.long, aes(x=Rep, y=Correlation, fill=factor(Dem))) +
geom_bar(width=0.75, stat="identity", position="dodge")
View(correlations)
ggplot(data = results.all, aes(SANDERS, KASICH)) +
scale_y_sqrt() +
geom_point(alpha=0.9) +
geom_smooth()
## look closely at Cinton & Trump
ggplot(data = results.all, aes(CLINTON, TRUMP)) +
geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) +
scale_y_sqrt() +
geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) +
scale_y_sqrt() +
geom_point(aes(colour=CRUZ)) +
scale_colour_gradient(low="blue", high="red")
ggplot(data = results.all, aes(CLINTON, TRUMP)) +
scale_y_sqrt() +
geom_point(aes(colour=KASICH)) +
scale_colour_gradient(low="blue", high="red")
ggplot(data = results.all, aes(SANDERS, TRUMP)) +
scale_y_sqrt() +
geom_point(aes(colour=KASICH)) +
scale_colour_gradient(low="blue", high="red")
ggplot(data = results.all, aes(SANDERS, KASICH)) +
scale_y_sqrt() +
geom_point(alpha=0.9) +
geom_smooth()
##### Now to plot correlations
## split into two tables
results.dem <- results.all[1:4]
results.rep <- results.all[c(1:2, 5:7)]
## get correlations by county
correlations.matrix <- cor(results.dem[-c(1:2)], results.rep[-c(1:2)])
## Display the matrix
str(correlations.matrix)
## melt the matrix into long format
library(reshape2)
correlations.long = melt(correlations.matrix)
## rename columns on new data-frame
library(dplyr)
correlations.long <- rename(correlations.long, Dem = Var1, Rep = Var2, Correlation = value)
## Plot grouped by Democrat
ggplot(data = correlations.long, aes(x=Dem, y=Correlation, fill=factor(Rep))) +
geom_bar(width=.75, stat="identity", position="dodge")
ggplot(data = results.all, aes(SANDERS, KASICH)) +
scale_y_sqrt() +
geom_point(alpha=0.9) +
geom_smooth()
## melt the matrix into long format
library(reshape2)
correlations.long = melt(correlations.matrix)
## rename columns on new data-frame
library(dplyr)
correlations.long <- rename(correlations.long, Dem = Var1, Rep = Var2, Correlation = value)
## Plot grouped by Democrat
ggplot(data = correlations.long, aes(x=Dem, y=Correlation, fill=factor(Rep))) +
geom_bar(width=.75, stat="identity", position="dodge")
## Plot grouped by Republican
ggplot(data = correlations.long, aes(x=Rep, y=Correlation, fill=factor(Dem))) +
geom_bar(width=0.75, stat="identity", position="dodge")
ggplot(data = correlations.long, aes(x=Dem, y=Correlation, fill=factor(Rep))) +
geom_bar(width=.75, stat="identity", position="dodge")
ggplot(data = correlations.long, aes(x=Dem, y=Correlation, fill=factor(Rep))) +
geom_bar(width=.75, stat="identity", position="dodge") +
scale_y_continuous(breaks=pretty_breaks(n=10))
ggplot(data = correlations.long, aes(x=Dem, y=Correlation, fill=factor(Rep))) +
geom_bar(width=.75, stat="identity", position="dodge") +
scale_y_continuous(breaks=pretty_breaks(n=20))
ggplot(data = correlations.long, aes(x=Rep, y=Correlation, fill=factor(Dem))) +
geom_bar(width=0.75, stat="identity", position="dodge") +
scale_y_continuous(breaks=pretty_breaks(n=20))
ggplot(data = results.all, aes(SANDERS, KASICH)) +
scale_y_sqrt() +
geom_point(alpha=0.9) +
geom_smooth()
ggplot(data = results.all, aes(SANDERS, TRUMP)) +
scale_y_sqrt() +
geom_point(aes(colour=KASICH)) +
scale_colour_gradient(low="blue", high="red")
ggplot(data = results.all, aes(CLINTON, TRUMP)) +
scale_y_sqrt() +
geom_point(aes(colour=KASICH)) +
scale_colour_gradient(low="blue", high="red")
ggplot(data = results.all, aes(CLINTON, TRUMP)) +
geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) +
scale_y_sqrt() +
geom_point(alpha=0.6)
ggplot(data = results.all, aes(CLINTON, TRUMP)) +
scale_y_sqrt() +
geom_point(aes(colour=CRUZ)) +
scale_colour_gradient(low="blue", high="red")
